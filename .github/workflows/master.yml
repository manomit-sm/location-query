name: Docker Image CI
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
    # checkout the repo
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/location-query:latest --build-arg db_url=${{secrets.DB_URL}} --build-arg keystore_password=${{secrets.KEYSTORE_PASSWORD}} --build-arg db_user=${{secrets.DB_USER}} --build-arg db_password=${{secrets.DB_PASSWORD}} .
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/location-query:latest
    - name: Set AKS context
      uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: myAKSCluster
        resource-group: MC_storagesample-sg_myAKSLocationCluster_eastus
    - name: Setup kubectl
      id: install-kubectl
      uses: azure/setup-kubectl@v3
    - name: Create Secrets
      uses: Azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: k8s-secret
    - name: Deploy to AKS
      id: deploy-aks
      uses: Azure/k8s-deploy@v4
      with:
        namespace: 'default'
        manifests: |
          location-query.yml
        images: |
          ${{ secrets.REGISTRY_LOGIN_SERVER }}/location-query:latest:latest
        imagepullsecrets: |
          k8s-secret